{"version":3,"file":"jobcards.min.js","sources":["../../../../apps/csf_tz/csf_tz/public/js/jobcards/bus.js","../../../../apps/csf_tz/csf_tz/public/js/jobcards/Card.vue?rollup-plugin-vue=script.js","../../../../apps/csf_tz/csf_tz/public/js/jobcards/Card.vue","../../../../apps/csf_tz/csf_tz/public/js/jobcards/JobCards.vue?rollup-plugin-vue=script.js","../../../../apps/csf_tz/csf_tz/public/js/jobcards/JobCards.vue","../../../../apps/csf_tz/csf_tz/public/js/jobcards/jobcards.js"],"sourcesContent":["export const evntBus = new Vue();","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { evntBus } from \"./bus\";\nexport default {\n  data: () => ({\n    Dialog: false,\n    cardData: \"\",\n    employees: \"\",\n    completed_qty: 0,\n    timer: {\n      hours: \"00\",\n      minutes: \"00\",\n      seconds: \"00\",\n      interval: \"\",\n    },\n  }),\n  watch: {\n    Dialog(value) {\n      if (value) {\n        this.get_employees();\n      } else {\n        clearInterval(this.timer.interval);\n      }\n    },\n  },\n  methods: {\n    close_dialog() {\n      this.Dialog = false;\n    },\n    start_job() {\n      let row = frappe.model.add_child(\n        this.cardData,\n        \"Job Card Time Log\",\n        \"time_logs\"\n      );\n      row.from_time = frappe.datetime.now_datetime();\n      row.name = \"\";\n      row.completed_qty = 0;\n      this.cardData.job_started = 1;\n      this.cardData.started_time = row.from_time;\n      this.cardData.status = \"Work In Progress\";\n      if (!frappe.flags.resume_job) {\n        this.cardData.current_time = 0;\n      }\n      this.set_timer();\n      this.save();\n    },\n    start_por() {\n      if (!this.cardData.employee) {\n        evntBus.$emit(\"show_messag\", \"Please set Employee\");\n      } else {\n        this.start_job();\n      }\n    },\n    resume_por() {\n      frappe.flags.resume_job = 1;\n      this.start_job();\n    },\n    pause_por() {\n      if (\n        this.cardData.for_quantity <\n        this.cardData.total_completed_qty + flt(this.completed_qty)\n      ) {\n        evntBus.$emit(\n          \"show_messag\",\n          \"The completed quantity cannot be greater than the required quantity\"\n        );\n        return;\n      }\n      frappe.flags.pause_job = 1;\n      this.cardData.status = \"On Hold\";\n      clearInterval(this.timer.interval);\n      this.complete_job();\n    },\n    get_employees() {\n      const vm = this;\n      let employees;\n      frappe.call({\n        method: \"csf_tz.csf_tz.page.jobcards.jobcards.get_employees\",\n        args: { company: this.cardData.company },\n        async: false,\n        callback: function (r) {\n          if (r.message) {\n            employees = r.message;\n          }\n        },\n      });\n      this.employees = employees;\n    },\n    customFilter(item, queryText, itemText) {\n      const searchText = queryText.toLowerCase();\n      const textOne = item.name.toLowerCase();\n      const textTwo = item.employee_name.toLowerCase();\n\n      return (\n        textOne.indexOf(searchText) > -1 || textTwo.indexOf(searchText) > -1\n      );\n    },\n    set_timer() {\n      if (this.cardData.status == \"Completed\") {\n        return;\n      }\n      const vm = this;\n      let currentIncrement = this.cardData.current_time || 0;\n      if (this.cardData.started_time || this.cardData.current_time) {\n        if (this.cardData.status == \"On Hold\") {\n          updateStopwatch(currentIncrement);\n          clearInterval(this.timer.interval);\n        } else {\n          currentIncrement += moment(frappe.datetime.now_datetime()).diff(\n            moment(this.cardData.started_time),\n            \"seconds\"\n          );\n          initialiseTimer();\n        }\n\n        function initialiseTimer() {\n          vm.timer.interval = setInterval(() => {\n            var current = setCurrentIncrement();\n            updateStopwatch(current);\n          }, 1000);\n        }\n\n        function updateStopwatch(increment) {\n          const hours = Math.floor(increment / 3600);\n          const minutes = Math.floor((increment - hours * 3600) / 60);\n          const seconds = increment - hours * 3600 - minutes * 60;\n\n          vm.timer.hours =\n            hours < 10 ? \"0\" + hours.toString() : hours.toString();\n          vm.timer.minutes =\n            minutes < 10 ? \"0\" + minutes.toString() : minutes.toString();\n          vm.timer.seconds =\n            seconds < 10 ? \"0\" + seconds.toString() : seconds.toString();\n        }\n\n        function setCurrentIncrement() {\n          currentIncrement += 1;\n          return currentIncrement;\n        }\n      }\n    },\n    complete_job(completed_time) {\n      const idx = this.cardData.time_logs.length - 1;\n      this.cardData.time_logs[idx].completed_qty = flt(this.completed_qty);\n      this.completed_qty = 0;\n      this.cardData.time_logs.forEach((d) => {\n        if (d.from_time && !d.to_time) {\n          d.to_time = completed_time || frappe.datetime.now_datetime();\n\n          if (frappe.flags.pause_job) {\n            let currentIncrement =\n              moment(d.to_time).diff(moment(d.from_time), \"seconds\") || 0;\n            this.cardData.current_time =\n              currentIncrement + (this.cardData.current_time || 0);\n          } else {\n            this.cardData.started_time = \"\";\n            this.cardData.job_started = 0;\n            this.cardData.current_time = 0;\n          }\n          this.save();\n        }\n      });\n    },\n    submit_dialog() {\n      this.cardData.status = \"Completed\";\n      this.save(\"Submit\");\n      this.close_dialog();\n    },\n    save(action = \"Save\") {\n      const vm = this;\n      const doc = { ...this.cardData };\n      delete doc[\"operation\"];\n      frappe.call({\n        method: \"csf_tz.csf_tz.page.jobcards.jobcards.save_doc\",\n        args: {\n          doc: doc,\n          action: action,\n        },\n        async: false,\n        callback: function (r) {\n          if (r.message) {\n            r.message.operation = vm.cardData.operation;\n            Object.assign(vm.cardData, r.message);\n          }\n        },\n      });\n    },\n  },\n  created: function () {\n    evntBus.$on(\"open_card\", (job_card) => {\n      this.Dialog = true;\n      this.cardData = job_card;\n      (this.timer = {\n        hours: \"00\",\n        minutes: \"00\",\n        seconds: \"00\",\n      }),\n        this.set_timer();\n    });\n  },\n};\n","<template>\n  <div justify=\"center\" v-if=\"Dialog\">\n    <v-dialog v-model=\"Dialog\" max-width=\"900\">\n      <v-card class=\"px-3\">\n        <v-card-title class=\"mt-2\">\n          <span class=\"headline indigo--text\">{{\n            cardData.operation.name\n          }}</span>\n          <v-spacer></v-spacer>\n          <div\n            class=\"stopwatch\"\n            style=\"\n              font-weight: bold;\n              margin: 0px 13px 0px 2px;\n              color: #545454;\n              font-size: 18px;\n              display: inline-block;\n              vertical-align: text-bottom;\n            \"\n          >\n            <span class=\"hours\">{{ timer.hours }}</span>\n            <span class=\"colon\">:</span>\n            <span class=\"minutes\">{{ timer.minutes }}</span>\n            <span class=\"colon\">:</span>\n            <span class=\"seconds\">{{ timer.seconds }}</span>\n          </div>\n          <v-spacer></v-spacer>\n          <span class=\"overline\">{{ cardData.name }}</span>\n        </v-card-title>\n        <v-row class=\"mx-3\">\n          <v-col lg=\"5\" md=\"5\" cols=\"12\">\n            <v-img\n              max-height=\"600\"\n              max-width=\"600\"\n              class=\"img-border\"\n              :src=\"\n                cardData.operation.image ||\n                '/assets/csf_tz/js/jobcards/placeholder-image.png'\n              \"\n            >\n            </v-img>\n            <v-list-item-subtitle class=\"subtitle-1 mb-1\">\n              Status: {{ cardData.status }}\n            </v-list-item-subtitle>\n          </v-col>\n          <v-col lg=\"4\" md=\"4\" cols=\"12\">\n            <v-textarea\n              label=\"Operation Description\"\n              auto-grow\n              outlined\n              rows=\"3\"\n              row-height=\"25\"\n              readonly\n              v-model=\"cardData.operation.description\"\n              hide-details\n            >\n           </v-textarea>\n          </v-col>\n          <v-col lg=\"3\" md=\"3\" cols=\"12\">\n            <v-list-item-subtitle class=\"subtitle-1 mb-1\">\n              Production Item: {{ cardData.production_item }}\n            </v-list-item-subtitle>\n            <v-img\n              max-height=\"400\"\n              max-width=\"400\"\n              class=\"img-border\"\n              :src=\"\n                cardData.work_order_image ||\n                '/assets/csf_tz/js/jobcards/placeholder-image.png'\n              \"\n            >\n            </v-img>\n            <v-divider></v-divider>\n            <v-autocomplete\n              dense\n              auto-select-first\n              outlined\n              color=\"indigo\"\n              label=\"Employee\"\n              v-model=\"cardData.employee\"\n              :items=\"employees\"\n              item-text=\"name\"\n              background-color=\"white\"\n              no-data-text=\"Customer not found\"\n              hide-details\n              :readonly=\"cardData.employee ? true : false\"\n              :filter=\"customFilter\"\n            >\n              <template v-slot:item=\"data\">\n                <template>\n                  <v-list-item-content>\n                    <v-list-item-title\n                      class=\"indigo--text subtitle-1\"\n                      v-html=\"data.item.name\"\n                    ></v-list-item-title>\n                    <v-list-item-subtitle\n                      v-html=\"`${data.item.employee_name}`\"\n                    ></v-list-item-subtitle>\n                  </v-list-item-content>\n                </template>\n              </template>\n            </v-autocomplete>\n          </v-col>\n        </v-row>\n        <v-row class=\"mx-3\">\n          <v-col lg=\"9\" md=\"9\" cols=\"12\">\n            <v-textarea\n              class=\"my-2\"\n              label=\"Remarks\"\n              auto-grow\n              outlined\n              rows=\"2\"\n              row-height=\"25\"\n              v-model=\"cardData.remarks\"\n              hide-details\n            >\n            </v-textarea>\n          </v-col>\n          <v-col lg=\"3\" md=\"3\" cols=\"12\">\n            <v-list-item-subtitle class=\"subtitle-1 mb-1\">\n              Qty To Manufacture: {{ cardData.for_quantity }}\n            </v-list-item-subtitle>\n            <v-list-item-subtitle class=\"subtitle-1 mb-1\">\n              Qty Completed: {{ cardData.total_completed_qty }}\n            </v-list-item-subtitle>\n          </v-col>\n        </v-row>\n        <v-card-actions class=\"mx-3\">\n          <v-btn\n            v-if=\"\n              !cardData.job_started &&\n              cardData.total_completed_qty != cardData.for_quantity\n            \"\n            @click=\"start_por\"\n            color=\"success\"\n            dark\n            >Start</v-btn\n          >\n          <v-btn\n            v-if=\"\n              cardData.status == 'On Hold' &&\n              cardData.total_completed_qty != cardData.for_quantity\n            \"\n            @click=\"resume_por\"\n            color=\"warning\"\n            dark\n            >Resume</v-btn\n          >\n          <v-btn\n            v-if=\"\n              cardData.status == 'Work In Progress' &&\n              cardData.total_completed_qty != cardData.for_quantity\n            \"\n            @click=\"pause_por\"\n            color=\"warning\"\n            dark\n            >Stop</v-btn\n          >\n          <v-spacer></v-spacer>\n          <v-text-field\n            v-if=\"\n              cardData.status == 'Work In Progress' &&\n              cardData.total_completed_qty != cardData.for_quantity\n            \"\n            outlined\n            color=\"indigo\"\n            label=\"Completed Qty\"\n            background-color=\"white\"\n            hide-details\n            v-model=\"completed_qty\"\n            type=\"number\"\n            dense\n          ></v-text-field>\n          <v-spacer></v-spacer>\n          <v-btn\n            color=\"primary\"\n            dark\n            @click=\"submit_dialog\"\n            v-if=\"\n              cardData.total_completed_qty == cardData.for_quantity &&\n              cardData.status != 'Completed'\n            \"\n            >Submit</v-btn\n          >\n          <v-btn color=\"error\" dark @click=\"close_dialog\">Close</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </div>\n</template>\n\n<script>\nimport { evntBus } from \"./bus\";\nexport default {\n  data: () => ({\n    Dialog: false,\n    cardData: \"\",\n    employees: \"\",\n    completed_qty: 0,\n    timer: {\n      hours: \"00\",\n      minutes: \"00\",\n      seconds: \"00\",\n      interval: \"\",\n    },\n  }),\n  watch: {\n    Dialog(value) {\n      if (value) {\n        this.get_employees();\n      } else {\n        clearInterval(this.timer.interval);\n      }\n    },\n  },\n  methods: {\n    close_dialog() {\n      this.Dialog = false;\n    },\n    start_job() {\n      let row = frappe.model.add_child(\n        this.cardData,\n        \"Job Card Time Log\",\n        \"time_logs\"\n      );\n      row.from_time = frappe.datetime.now_datetime();\n      row.name = \"\";\n      row.completed_qty = 0;\n      this.cardData.job_started = 1;\n      this.cardData.started_time = row.from_time;\n      this.cardData.status = \"Work In Progress\";\n      if (!frappe.flags.resume_job) {\n        this.cardData.current_time = 0;\n      }\n      this.set_timer();\n      this.save();\n    },\n    start_por() {\n      if (!this.cardData.employee) {\n        evntBus.$emit(\"show_messag\", \"Please set Employee\");\n      } else {\n        this.start_job();\n      }\n    },\n    resume_por() {\n      frappe.flags.resume_job = 1;\n      this.start_job();\n    },\n    pause_por() {\n      if (\n        this.cardData.for_quantity <\n        this.cardData.total_completed_qty + flt(this.completed_qty)\n      ) {\n        evntBus.$emit(\n          \"show_messag\",\n          \"The completed quantity cannot be greater than the required quantity\"\n        );\n        return;\n      }\n      frappe.flags.pause_job = 1;\n      this.cardData.status = \"On Hold\";\n      clearInterval(this.timer.interval);\n      this.complete_job();\n    },\n    get_employees() {\n      const vm = this;\n      let employees;\n      frappe.call({\n        method: \"csf_tz.csf_tz.page.jobcards.jobcards.get_employees\",\n        args: { company: this.cardData.company },\n        async: false,\n        callback: function (r) {\n          if (r.message) {\n            employees = r.message;\n          }\n        },\n      });\n      this.employees = employees;\n    },\n    customFilter(item, queryText, itemText) {\n      const searchText = queryText.toLowerCase();\n      const textOne = item.name.toLowerCase();\n      const textTwo = item.employee_name.toLowerCase();\n\n      return (\n        textOne.indexOf(searchText) > -1 || textTwo.indexOf(searchText) > -1\n      );\n    },\n    set_timer() {\n      if (this.cardData.status == \"Completed\") {\n        return;\n      }\n      const vm = this;\n      let currentIncrement = this.cardData.current_time || 0;\n      if (this.cardData.started_time || this.cardData.current_time) {\n        if (this.cardData.status == \"On Hold\") {\n          updateStopwatch(currentIncrement);\n          clearInterval(this.timer.interval);\n        } else {\n          currentIncrement += moment(frappe.datetime.now_datetime()).diff(\n            moment(this.cardData.started_time),\n            \"seconds\"\n          );\n          initialiseTimer();\n        }\n\n        function initialiseTimer() {\n          vm.timer.interval = setInterval(() => {\n            var current = setCurrentIncrement();\n            updateStopwatch(current);\n          }, 1000);\n        }\n\n        function updateStopwatch(increment) {\n          const hours = Math.floor(increment / 3600);\n          const minutes = Math.floor((increment - hours * 3600) / 60);\n          const seconds = increment - hours * 3600 - minutes * 60;\n\n          vm.timer.hours =\n            hours < 10 ? \"0\" + hours.toString() : hours.toString();\n          vm.timer.minutes =\n            minutes < 10 ? \"0\" + minutes.toString() : minutes.toString();\n          vm.timer.seconds =\n            seconds < 10 ? \"0\" + seconds.toString() : seconds.toString();\n        }\n\n        function setCurrentIncrement() {\n          currentIncrement += 1;\n          return currentIncrement;\n        }\n      }\n    },\n    complete_job(completed_time) {\n      const idx = this.cardData.time_logs.length - 1;\n      this.cardData.time_logs[idx].completed_qty = flt(this.completed_qty);\n      this.completed_qty = 0;\n      this.cardData.time_logs.forEach((d) => {\n        if (d.from_time && !d.to_time) {\n          d.to_time = completed_time || frappe.datetime.now_datetime();\n\n          if (frappe.flags.pause_job) {\n            let currentIncrement =\n              moment(d.to_time).diff(moment(d.from_time), \"seconds\") || 0;\n            this.cardData.current_time =\n              currentIncrement + (this.cardData.current_time || 0);\n          } else {\n            this.cardData.started_time = \"\";\n            this.cardData.job_started = 0;\n            this.cardData.current_time = 0;\n          }\n          this.save();\n        }\n      });\n    },\n    submit_dialog() {\n      this.cardData.status = \"Completed\";\n      this.save(\"Submit\");\n      this.close_dialog();\n    },\n    save(action = \"Save\") {\n      const vm = this;\n      const doc = { ...this.cardData };\n      delete doc[\"operation\"];\n      frappe.call({\n        method: \"csf_tz.csf_tz.page.jobcards.jobcards.save_doc\",\n        args: {\n          doc: doc,\n          action: action,\n        },\n        async: false,\n        callback: function (r) {\n          if (r.message) {\n            r.message.operation = vm.cardData.operation;\n            Object.assign(vm.cardData, r.message);\n          }\n        },\n      });\n    },\n  },\n  created: function () {\n    evntBus.$on(\"open_card\", (job_card) => {\n      this.Dialog = true;\n      this.cardData = job_card;\n      (this.timer = {\n        hours: \"00\",\n        minutes: \"00\",\n        seconds: \"00\",\n      }),\n        this.set_timer();\n    });\n  },\n};\n</script>\n\n<style>\n</style>","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { evntBus } from \"./bus\";\nimport Card from \"./Card.vue\";\n\nexport default {\n  data: function () {\n    return {\n      data: \"\",\n    };\n  },\n  components: {\n    Card,\n  },\n\n  methods: {\n    get_data() {\n      const vm = this;\n      frappe.call({\n        method: \"csf_tz.csf_tz.page.jobcards.jobcards.get_job_cards\",\n        args: {},\n        async: true,\n        callback: function (r) {\n          if (r.message) {\n            vm.data = r.message;\n          }\n        },\n      });\n    },\n    get_current(increment) {\n      const hours = Math.floor(increment / 3600);\n      const minutes = Math.floor((increment - hours * 3600) / 60);\n      const seconds = increment - hours * 3600 - minutes * 60;\n      return {\n      hours :\n        hours < 10 ? \"0\" + hours.toString() : hours.toString(),\n      minutes :\n        minutes < 10 ? \"0\" + minutes.toString() : minutes.toString(),\n      seconds :\n        seconds < 10 ? \"0\" + seconds.toString() : seconds.toString(),\n        }\n    },\n    open_card(item) {\n      evntBus.$emit(\"open_card\", item);\n    },\n    set_status_color(status) {\n      if (status == \"Open\") {\n        return \"status-Open\";\n      }\n      if (status == \"Work In Progress\") {\n        return \"status-Work\";\n      }\n      if (status == \"Material Transferred\") {\n        return \"status-Material\";\n      }\n      if (status == \"On Hold\") {\n        return \"status-Hold\";\n      }\n      if (status == \"Submitted\") {\n        return \"status-Submitted\";\n      }\n    },\n  },\n  created: function () {\n    this.get_data();\n    evntBus.$on(\"show_messag\", (msg) => {\n      frappe.msgprint(msg);\n    });\n  },\n};\n","<template>\n  <v-app>\n    <div fluid>\n      <H3> Working Job Cards</H3>\n      <Card></Card>\n      <div v-for=\"item in data\" :key=\"item.name\">\n        <div :class=\"set_status_color(item.status)\">\n          <v-card class=\"mb-4\">\n            <v-list-item three-line>\n              <v-row>\n                <v-col lg=\"9\" md=\"9\" cols=\"12\">\n              <v-list-item-content>\n                <div class=\"overline mb-4\">{{ item.name }}</div>\n                <v-list-item-title class=\"headline mb-2\">\n                  {{ item.operation.name }}\n                </v-list-item-title>\n                <v-list-item-subtitle class=\"mb-1\">\n                  Qty To Manufacture: {{ item.for_quantity }}\n                </v-list-item-subtitle>\n                <v-list-item-subtitle class=\"mb-1\">\n                  Total Completed Qty: {{ item.total_completed_qty }}\n                </v-list-item-subtitle>\n                <v-list-item-subtitle class=\"mb-1\">\n                  Production Item: {{ item.production_item }}\n                </v-list-item-subtitle>\n                <v-list-item-subtitle class=\"mb-1\">\n                  Satus: {{ item.status }}\n                </v-list-item-subtitle>\n                <v-card-subtitle v-if=\"item.current_time\">\n                  Current Time: \n                  <span class=\"hours\">{{ get_current(item.current_time).hours }}</span>\n                  <span class=\"colon\">:</span>\n                  <span class=\"minutes\">{{ get_current(item.current_time).minutes }}</span>\n                  <span class=\"colon\">:</span>\n                  <span class=\"seconds\">{{ get_current(item.current_time).seconds }}</span>\n                  </v-card-subtitle>\n              </v-list-item-content>\n              </v-col>\n              <v-col lg=\"3\" md=\"3\" cols=\"12\">\n              <v-img\n                max-height=\"150\"\n                max-width=\"250\"\n                class=\"img-border mt-5\"\n                :src=\"\n                  item.operation.image ||\n                  '/assets/csf_tz/js/jobcards/placeholder-image.png'\n                \"\n              ></v-img>\n              </v-col>\n            </v-row>\n            </v-list-item>\n            <v-card-actions>\n              <!-- <v-spacer></v-spacer> -->\n              <v-btn text color=\"primary\" @click=\"open_card(item)\">\n                open\n              </v-btn>\n            </v-card-actions>\n          </v-card>\n        </div>\n      </div>\n    </div>\n  </v-app>\n</template>\n\n<script>\nimport { evntBus } from \"./bus\";\nimport Card from \"./Card.vue\";\n\nexport default {\n  data: function () {\n    return {\n      data: \"\",\n    };\n  },\n  components: {\n    Card,\n  },\n\n  methods: {\n    get_data() {\n      const vm = this;\n      frappe.call({\n        method: \"csf_tz.csf_tz.page.jobcards.jobcards.get_job_cards\",\n        args: {},\n        async: true,\n        callback: function (r) {\n          if (r.message) {\n            vm.data = r.message;\n          }\n        },\n      });\n    },\n    get_current(increment) {\n      const hours = Math.floor(increment / 3600);\n      const minutes = Math.floor((increment - hours * 3600) / 60);\n      const seconds = increment - hours * 3600 - minutes * 60;\n      return {\n      hours :\n        hours < 10 ? \"0\" + hours.toString() : hours.toString(),\n      minutes :\n        minutes < 10 ? \"0\" + minutes.toString() : minutes.toString(),\n      seconds :\n        seconds < 10 ? \"0\" + seconds.toString() : seconds.toString(),\n        }\n    },\n    open_card(item) {\n      evntBus.$emit(\"open_card\", item);\n    },\n    set_status_color(status) {\n      if (status == \"Open\") {\n        return \"status-Open\";\n      }\n      if (status == \"Work In Progress\") {\n        return \"status-Work\";\n      }\n      if (status == \"Material Transferred\") {\n        return \"status-Material\";\n      }\n      if (status == \"On Hold\") {\n        return \"status-Hold\";\n      }\n      if (status == \"Submitted\") {\n        return \"status-Submitted\";\n      }\n    },\n  },\n  created: function () {\n    this.get_data();\n    evntBus.$on(\"show_messag\", (msg) => {\n      frappe.msgprint(msg);\n    });\n  },\n};\n</script>\n<style>\n.navbar-default {\n  height: 40px;\n}\ndiv.navbar .container {\n  padding-top: 2px;\n}\n.status-Open {\n  border-left: 5px solid purple;\n}\n.status-Work {\n  border-left: 5px solid lime;\n}\n.status-Material {\n  border-left: 5px solid teal;\n}\n.status-Hold {\n  border-left: 5px solid #607d8b;\n}\n.status-Submitted {\n  border-left: 5px solid #ff5722;\n}\n.img-border {\n  border: 1px solid #BDBDBD;\n}\n</style>","import Job_Cards from './JobCards.vue';\n\nfrappe.provide('frappe.JobCards');\n\n\nfrappe.JobCards.job_cards = class {\n        constructor({ parent }) {\n                this.$parent = $(parent);\n                this.page = parent.page;\n                this.make_body();\n        }\n        make_body() {\n                this.$EL = this.$parent.find('.layout-main');\n                this.vue = new Vue({\n                        vuetify: new Vuetify(),\n                        el: this.$EL[0],\n                        data: {\n                        },\n                        render: h => h(Job_Cards),\n                });\n        }\n        setup_header() {\n\n        }\n};"],"names":["const","let","this"],"mappings":"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"}