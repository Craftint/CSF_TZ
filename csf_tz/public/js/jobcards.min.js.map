{"version":3,"file":"jobcards.min.js","sources":["../../../../apps/csf_tz/csf_tz/public/js/jobcards/bus.js","../../../../apps/csf_tz/csf_tz/public/js/jobcards/Card.vue?rollup-plugin-vue=script.js","../../../../apps/csf_tz/csf_tz/public/js/jobcards/JobCards.vue?rollup-plugin-vue=script.js","../../../../apps/csf_tz/csf_tz/public/js/jobcards/jobcards.js"],"sourcesContent":["export const evntBus = new Vue();","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { evntBus } from \"./bus\";\nexport default {\n  data: () => ({\n    Dialog: false,\n    cardData: \"\",\n    employees: \"\",\n    timer: {\n      hours: '00',\n      minutes: '00',\n      seconds: '00',\n      interval: \"\",\n    },\n  }),\n  watch: {\n    Dialog(value) {\n      if (value) {\n        this.get_employees();\n      }\n      else {\n        clearInterval(this.timer.interval);\n      }\n    },\n  },\n  methods: {\n    close_dialog() {\n      this.Dialog = false;\n    },\n    start_job() {\n        let row = frappe.model.add_child(\n          this.cardData,\n          \"Job Card Time Log\",\n          \"time_logs\"\n        );\n        row.from_time = frappe.datetime.now_datetime();\n        this.cardData.job_started = 1;\n        this.cardData.started_time = row.from_time;\n        this.cardData.status = \"Work In Progress\";\n        if (!frappe.flags.resume_job) {\n          this.cardData.current_time = 0;\n        }\n        this.set_timer();\n        // frm.save(\"Save\", () => {}, \"\", () => {\n        //   frm.doc.time_logs.pop(-1);\n        // });\n      \n    },\n    start_por() {\n      if (!this.cardData.employee) {\n        evntBus.$emit(\"show_messag\", \"Please set Employee\");\n      } else {\n        this.start_job();\n      }\n    },\n    resume_por() {\n      frappe.flags.resume_job = 1;\n      this.start_job();\n    },\n    pause_por() {\n      this.start = false;\n      frappe.flags.pause_job = 1;\n      this.cardData.status = \"On Hold\";\n      clearInterval(this.timer.interval);\n      this.complete_job();\n    },\n    get_employees() {\n      const vm = this;\n      let employees;\n      frappe.call({\n        method: \"csf_tz.csf_tz.page.jobcards.jobcards.get_employees\",\n        args: { company: this.cardData.company },\n        async: false,\n        callback: function (r) {\n          if (r.message) {\n            employees = r.message;\n          }\n        },\n      });\n      this.employees = employees;\n    },\n    customFilter(item, queryText, itemText) {\n      const searchText = queryText.toLowerCase();\n      const textOne = item.name.toLowerCase();\n      const textTwo = item.employee_name.toLowerCase();\n\n      return (\n        textOne.indexOf(searchText) > -1 || textTwo.indexOf(searchText) > -1\n      );\n    },\n    set_timer() {\n      const vm = this;\n      let currentIncrement = this.cardData.current_time || 0;\n      if (this.cardData.started_time || this.cardData.current_time) {\n        if (this.cardData.status == \"On Hold\") {\n          updateStopwatch(currentIncrement);\n          clearInterval(this.timer.interval);\n        } else {\n          currentIncrement += moment(frappe.datetime.now_datetime()).diff(\n            moment(this.cardData.started_time),\n            \"seconds\"\n          );\n          initialiseTimer();\n        }\n\n        function initialiseTimer() {\n          vm.timer.interval = setInterval(() => {\n            var current = setCurrentIncrement();\n            updateStopwatch(current);\n          }, 1000);\n        }\n\n        function updateStopwatch(increment) {\n          const hours = Math.floor(increment / 3600);\n          const minutes = Math.floor((increment - hours * 3600) / 60);\n          const seconds = increment - hours * 3600 - minutes * 60;\n\n          vm.timer.hours =\n            hours < 10 ? \"0\" + hours.toString() : hours.toString();\n          vm.timer.minutes =\n            minutes < 10 ? \"0\" + minutes.toString() : minutes.toString();\n          vm.timer.seconds =\n            seconds < 10 ? \"0\" + seconds.toString() : seconds.toString();\n        }\n\n        function setCurrentIncrement() {\n          currentIncrement += 1;\n          return currentIncrement;\n        }\n      }\n    },\n    complete_job(completed_time, completed_qty) {\n      console.log(\"complete_job\")\n      this.cardData.time_logs.forEach(d => {\n\t\t\tif (d.from_time && !d.to_time) {\n\t\t\t\td.to_time = completed_time || frappe.datetime.now_datetime();\n\t\t\t\td.completed_qty = completed_qty || 0;\n\n\t\t\t\tif(frappe.flags.pause_job) {\n\t\t\t\t\tlet currentIncrement = moment(d.to_time).diff(moment(d.from_time),\"seconds\") || 0;\n          this.cardData.current_time = currentIncrement + (this.cardData.current_time || 0)\n\t\t\t\t} else {\n          this.cardData.started_time = \"\";\n          this.cardData.job_started = 0;\n          this.cardData.current_time = 0;\n\t\t\t\t}\n\n\t\t\t\t// frm.save();\n\t\t\t}\n\t\t});\n    },\n  },\n  created: function () {\n    evntBus.$on(\"open_card\", (job_card) => {\n      this.Dialog = true;\n      this.cardData = job_card;\n      this.timer = {\n        hours: '00',\n        minutes: '00',\n        seconds: '00',\n      },\n      this.set_timer();\n    });\n  },\n};\n","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { evntBus } from \"./bus\";\nimport Card from \"./Card.vue\";\n\nexport default {\n  data: function () {\n    return {\n      data: \"\",\n    };\n  },\n  components: {\n    Card,\n  },\n\n  methods: {\n    get_data() {\n      const vm = this;\n      frappe.call({\n        method: \"csf_tz.csf_tz.page.jobcards.jobcards.get_job_cards\",\n        args: {},\n        async: true,\n        callback: function (r) {\n          if (r.message) {\n            vm.data = r.message;\n          }\n        },\n      });\n    },\n    get_current(increment) {\n      const hours = Math.floor(increment / 3600);\n      const minutes = Math.floor((increment - hours * 3600) / 60);\n      const seconds = increment - hours * 3600 - minutes * 60;\n      return {\n      hours :\n        hours < 10 ? \"0\" + hours.toString() : hours.toString(),\n      minutes :\n        minutes < 10 ? \"0\" + minutes.toString() : minutes.toString(),\n      seconds :\n        seconds < 10 ? \"0\" + seconds.toString() : seconds.toString(),\n        }\n    },\n    open_card(item) {\n      evntBus.$emit(\"open_card\", item);\n    },\n    set_status_color(status) {\n      if (status == \"Open\") {\n        return \"status-Open\";\n      }\n      if (status == \"Work In Progress\") {\n        return \"status-Work\";\n      }\n      if (status == \"Material Transferred\") {\n        return \"status-Material\";\n      }\n      if (status == \"On Hold\") {\n        return \"status-Hold\";\n      }\n      if (status == \"Submitted\") {\n        return \"status-Submitted\";\n      }\n    },\n  },\n  created: function () {\n    this.get_data();\n    evntBus.$on(\"show_messag\", (msg) => {\n      frappe.msgprint(msg);\n    });\n  },\n};\n","import Job_Cards from './JobCards.vue';\n\nfrappe.provide('frappe.JobCards');\n\n\nfrappe.JobCards.job_cards = class {\n        constructor({ parent }) {\n                this.$parent = $(parent);\n                this.page = parent.page;\n                this.make_body();\n        }\n        make_body() {\n                this.$EL = this.$parent.find('.layout-main');\n                this.vue = new Vue({\n                        vuetify: new Vuetify(),\n                        el: this.$EL[0],\n                        data: {\n                        },\n                        render: h => h(Job_Cards),\n                });\n        }\n        setup_header() {\n\n        }\n};"],"names":["const","evntBus","Vue","data","Dialog","cardData","employees","timer","hours","minutes","seconds","interval","watch","value","this","get_employees","clearInterval","methods","close_dialog","start_job","let","row","frappe","model","add_child","from_time","datetime","now_datetime","job_started","started_time","status","flags","resume_job","current_time","set_timer","start_por","employee","$emit","resume_por","pause_por","start","pause_job","complete_job","call","method","args","company","async","callback","r","message","customFilter","item","queryText","itemText","searchText","toLowerCase","textOne","name","textTwo","employee_name","indexOf","vm","currentIncrement","updateStopwatch","increment","Math","floor","toString","moment","diff","setInterval","current","completed_time","completed_qty","console","log","time_logs","forEach","d","to_time","created","$on","job_card","components","get_data","get_current","open_card","set_status_color","msg","msgprint","provide","JobCards","job_cards","[object Object]","ref","$parent","$","parent","page","make_body","$EL","find","vue","vuetify","Vuetify","el","render","h","Job_Cards"],"mappings":"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"}